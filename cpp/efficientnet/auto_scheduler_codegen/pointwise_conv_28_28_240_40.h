 // grid=(196,1,1),  block=(80,1,1)


extern "C" __global__ void __launch_bounds__(80) pointwise_28_28_240_40(float* __restrict__ input, float* __restrict__ weight, float* __restrict__ output) {
  float output_local[2];
  __shared__ float input_shared[480];
  __shared__ float weight_shared[1200];
  output_local[(0)] = 0.000000e+00f;
  output_local[(1)] = 0.000000e+00f;
  ((float3*)(input_shared + ((((int)threadIdx.x) * 3))))[0] = ((float3*)(input + (((((((int)blockIdx.x) >> 1) * 1920) + ((((int)threadIdx.x) / 20) * 240)) + ((((int)threadIdx.x) % 20) * 3)))))[0];
  ((float3*)(input_shared + (((((int)threadIdx.x) * 3) + 240))))[0] = ((float3*)(input + ((((((((int)blockIdx.x) >> 1) * 1920) + ((((int)threadIdx.x) / 20) * 240)) + ((((int)threadIdx.x) % 20) * 3)) + 960))))[0];
  weight_shared[(((int)threadIdx.x))] = weight[(((((((int)blockIdx.x) & 1) * 4800) + ((((int)threadIdx.x) / 60) * 240)) + (((int)threadIdx.x) % 60)))];
  weight_shared[((((int)threadIdx.x) + 80))] = weight[(((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 80) / 60) * 240)) + ((((int)threadIdx.x) + 20) % 60)))];
  weight_shared[((((int)threadIdx.x) + 160))] = weight[(((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 160) / 60) * 240)) + ((((int)threadIdx.x) + 40) % 60)))];
  weight_shared[((((int)threadIdx.x) + 240))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + ((((int)threadIdx.x) / 60) * 240)) + (((int)threadIdx.x) % 60)) + 960))];
  weight_shared[((((int)threadIdx.x) + 320))] = weight[(((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 320) / 60) * 240)) + ((((int)threadIdx.x) + 20) % 60)))];
  weight_shared[((((int)threadIdx.x) + 400))] = weight[(((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 400) / 60) * 240)) + ((((int)threadIdx.x) + 40) % 60)))];
  weight_shared[((((int)threadIdx.x) + 480))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + ((((int)threadIdx.x) / 60) * 240)) + (((int)threadIdx.x) % 60)) + 1920))];
  weight_shared[((((int)threadIdx.x) + 560))] = weight[(((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 560) / 60) * 240)) + ((((int)threadIdx.x) + 20) % 60)))];
  weight_shared[((((int)threadIdx.x) + 640))] = weight[(((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 640) / 60) * 240)) + ((((int)threadIdx.x) + 40) % 60)))];
  weight_shared[((((int)threadIdx.x) + 720))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + ((((int)threadIdx.x) / 60) * 240)) + (((int)threadIdx.x) % 60)) + 2880))];
  weight_shared[((((int)threadIdx.x) + 800))] = weight[(((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 800) / 60) * 240)) + ((((int)threadIdx.x) + 20) % 60)))];
  weight_shared[((((int)threadIdx.x) + 880))] = weight[(((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 880) / 60) * 240)) + ((((int)threadIdx.x) + 40) % 60)))];
  weight_shared[((((int)threadIdx.x) + 960))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + ((((int)threadIdx.x) / 60) * 240)) + (((int)threadIdx.x) % 60)) + 3840))];
  weight_shared[((((int)threadIdx.x) + 1040))] = weight[(((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 1040) / 60) * 240)) + ((((int)threadIdx.x) + 20) % 60)))];
  weight_shared[((((int)threadIdx.x) + 1120))] = weight[(((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 1120) / 60) * 240)) + ((((int)threadIdx.x) + 40) % 60)))];
  __syncthreads();
  output_local[(0)] = (output_local[(0)] + (input_shared[(((((int)threadIdx.x) / 20) * 60))] * weight_shared[(((((int)threadIdx.x) % 20) * 60))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 240))] * weight_shared[(((((int)threadIdx.x) % 20) * 60))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 1))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 1))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 241))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 1))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 2))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 2))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 242))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 2))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 3))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 3))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 243))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 3))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 4))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 4))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 244))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 4))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 5))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 5))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 245))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 5))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 6))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 6))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 246))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 6))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 7))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 7))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 247))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 7))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 8))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 8))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 248))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 8))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 9))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 9))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 249))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 9))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 10))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 10))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 250))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 10))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 11))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 11))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 251))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 11))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 12))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 12))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 252))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 12))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 13))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 13))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 253))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 13))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 14))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 14))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 254))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 14))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 15))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 15))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 255))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 15))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 16))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 16))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 256))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 16))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 17))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 17))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 257))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 17))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 18))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 18))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 258))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 18))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 19))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 19))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 259))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 19))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 20))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 20))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 260))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 20))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 21))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 21))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 261))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 21))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 22))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 22))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 262))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 22))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 23))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 23))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 263))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 23))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 24))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 24))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 264))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 24))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 25))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 25))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 265))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 25))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 26))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 26))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 266))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 26))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 27))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 27))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 267))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 27))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 28))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 28))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 268))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 28))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 29))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 29))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 269))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 29))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 30))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 30))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 270))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 30))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 31))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 31))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 271))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 31))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 32))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 32))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 272))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 32))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 33))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 33))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 273))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 33))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 34))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 34))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 274))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 34))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 35))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 35))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 275))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 35))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 36))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 36))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 276))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 36))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 37))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 37))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 277))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 37))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 38))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 38))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 278))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 38))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 39))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 39))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 279))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 39))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 40))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 40))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 280))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 40))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 41))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 41))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 281))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 41))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 42))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 42))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 282))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 42))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 43))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 43))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 283))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 43))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 44))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 44))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 284))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 44))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 45))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 45))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 285))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 45))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 46))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 46))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 286))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 46))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 47))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 47))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 287))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 47))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 48))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 48))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 288))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 48))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 49))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 49))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 289))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 49))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 50))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 50))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 290))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 50))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 51))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 51))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 291))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 51))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 52))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 52))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 292))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 52))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 53))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 53))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 293))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 53))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 54))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 54))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 294))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 54))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 55))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 55))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 295))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 55))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 56))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 56))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 296))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 56))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 57))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 57))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 297))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 57))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 58))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 58))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 298))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 58))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 59))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 59))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 299))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 59))]));
  __syncthreads();
  ((float3*)(input_shared + ((((int)threadIdx.x) * 3))))[0] = ((float3*)(input + ((((((((int)blockIdx.x) >> 1) * 1920) + ((((int)threadIdx.x) / 20) * 240)) + ((((int)threadIdx.x) % 20) * 3)) + 60))))[0];
  ((float3*)(input_shared + (((((int)threadIdx.x) * 3) + 240))))[0] = ((float3*)(input + ((((((((int)blockIdx.x) >> 1) * 1920) + ((((int)threadIdx.x) / 20) * 240)) + ((((int)threadIdx.x) % 20) * 3)) + 1020))))[0];
  weight_shared[(((int)threadIdx.x))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + ((((int)threadIdx.x) / 60) * 240)) + (((int)threadIdx.x) % 60)) + 60))];
  weight_shared[((((int)threadIdx.x) + 80))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 80) / 60) * 240)) + ((((int)threadIdx.x) + 20) % 60)) + 60))];
  weight_shared[((((int)threadIdx.x) + 160))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 160) / 60) * 240)) + ((((int)threadIdx.x) + 40) % 60)) + 60))];
  weight_shared[((((int)threadIdx.x) + 240))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + ((((int)threadIdx.x) / 60) * 240)) + (((int)threadIdx.x) % 60)) + 1020))];
  weight_shared[((((int)threadIdx.x) + 320))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 320) / 60) * 240)) + ((((int)threadIdx.x) + 20) % 60)) + 60))];
  weight_shared[((((int)threadIdx.x) + 400))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 400) / 60) * 240)) + ((((int)threadIdx.x) + 40) % 60)) + 60))];
  weight_shared[((((int)threadIdx.x) + 480))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + ((((int)threadIdx.x) / 60) * 240)) + (((int)threadIdx.x) % 60)) + 1980))];
  weight_shared[((((int)threadIdx.x) + 560))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 560) / 60) * 240)) + ((((int)threadIdx.x) + 20) % 60)) + 60))];
  weight_shared[((((int)threadIdx.x) + 640))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 640) / 60) * 240)) + ((((int)threadIdx.x) + 40) % 60)) + 60))];
  weight_shared[((((int)threadIdx.x) + 720))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + ((((int)threadIdx.x) / 60) * 240)) + (((int)threadIdx.x) % 60)) + 2940))];
  weight_shared[((((int)threadIdx.x) + 800))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 800) / 60) * 240)) + ((((int)threadIdx.x) + 20) % 60)) + 60))];
  weight_shared[((((int)threadIdx.x) + 880))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 880) / 60) * 240)) + ((((int)threadIdx.x) + 40) % 60)) + 60))];
  weight_shared[((((int)threadIdx.x) + 960))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + ((((int)threadIdx.x) / 60) * 240)) + (((int)threadIdx.x) % 60)) + 3900))];
  weight_shared[((((int)threadIdx.x) + 1040))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 1040) / 60) * 240)) + ((((int)threadIdx.x) + 20) % 60)) + 60))];
  weight_shared[((((int)threadIdx.x) + 1120))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 1120) / 60) * 240)) + ((((int)threadIdx.x) + 40) % 60)) + 60))];
  __syncthreads();
  output_local[(0)] = (output_local[(0)] + (input_shared[(((((int)threadIdx.x) / 20) * 60))] * weight_shared[(((((int)threadIdx.x) % 20) * 60))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 240))] * weight_shared[(((((int)threadIdx.x) % 20) * 60))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 1))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 1))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 241))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 1))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 2))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 2))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 242))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 2))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 3))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 3))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 243))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 3))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 4))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 4))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 244))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 4))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 5))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 5))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 245))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 5))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 6))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 6))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 246))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 6))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 7))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 7))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 247))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 7))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 8))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 8))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 248))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 8))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 9))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 9))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 249))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 9))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 10))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 10))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 250))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 10))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 11))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 11))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 251))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 11))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 12))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 12))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 252))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 12))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 13))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 13))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 253))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 13))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 14))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 14))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 254))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 14))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 15))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 15))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 255))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 15))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 16))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 16))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 256))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 16))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 17))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 17))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 257))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 17))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 18))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 18))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 258))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 18))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 19))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 19))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 259))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 19))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 20))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 20))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 260))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 20))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 21))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 21))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 261))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 21))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 22))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 22))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 262))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 22))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 23))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 23))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 263))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 23))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 24))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 24))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 264))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 24))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 25))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 25))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 265))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 25))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 26))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 26))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 266))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 26))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 27))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 27))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 267))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 27))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 28))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 28))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 268))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 28))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 29))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 29))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 269))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 29))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 30))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 30))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 270))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 30))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 31))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 31))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 271))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 31))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 32))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 32))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 272))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 32))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 33))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 33))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 273))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 33))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 34))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 34))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 274))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 34))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 35))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 35))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 275))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 35))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 36))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 36))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 276))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 36))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 37))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 37))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 277))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 37))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 38))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 38))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 278))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 38))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 39))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 39))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 279))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 39))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 40))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 40))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 280))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 40))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 41))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 41))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 281))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 41))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 42))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 42))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 282))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 42))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 43))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 43))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 283))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 43))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 44))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 44))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 284))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 44))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 45))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 45))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 285))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 45))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 46))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 46))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 286))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 46))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 47))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 47))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 287))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 47))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 48))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 48))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 288))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 48))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 49))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 49))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 289))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 49))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 50))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 50))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 290))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 50))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 51))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 51))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 291))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 51))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 52))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 52))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 292))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 52))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 53))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 53))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 293))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 53))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 54))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 54))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 294))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 54))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 55))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 55))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 295))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 55))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 56))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 56))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 296))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 56))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 57))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 57))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 297))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 57))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 58))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 58))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 298))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 58))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 59))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 59))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 299))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 59))]));
  __syncthreads();
  ((float3*)(input_shared + ((((int)threadIdx.x) * 3))))[0] = ((float3*)(input + ((((((((int)blockIdx.x) >> 1) * 1920) + ((((int)threadIdx.x) / 20) * 240)) + ((((int)threadIdx.x) % 20) * 3)) + 120))))[0];
  ((float3*)(input_shared + (((((int)threadIdx.x) * 3) + 240))))[0] = ((float3*)(input + ((((((((int)blockIdx.x) >> 1) * 1920) + ((((int)threadIdx.x) / 20) * 240)) + ((((int)threadIdx.x) % 20) * 3)) + 1080))))[0];
  weight_shared[(((int)threadIdx.x))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + ((((int)threadIdx.x) / 60) * 240)) + (((int)threadIdx.x) % 60)) + 120))];
  weight_shared[((((int)threadIdx.x) + 80))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 80) / 60) * 240)) + ((((int)threadIdx.x) + 20) % 60)) + 120))];
  weight_shared[((((int)threadIdx.x) + 160))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 160) / 60) * 240)) + ((((int)threadIdx.x) + 40) % 60)) + 120))];
  weight_shared[((((int)threadIdx.x) + 240))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + ((((int)threadIdx.x) / 60) * 240)) + (((int)threadIdx.x) % 60)) + 1080))];
  weight_shared[((((int)threadIdx.x) + 320))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 320) / 60) * 240)) + ((((int)threadIdx.x) + 20) % 60)) + 120))];
  weight_shared[((((int)threadIdx.x) + 400))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 400) / 60) * 240)) + ((((int)threadIdx.x) + 40) % 60)) + 120))];
  weight_shared[((((int)threadIdx.x) + 480))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + ((((int)threadIdx.x) / 60) * 240)) + (((int)threadIdx.x) % 60)) + 2040))];
  weight_shared[((((int)threadIdx.x) + 560))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 560) / 60) * 240)) + ((((int)threadIdx.x) + 20) % 60)) + 120))];
  weight_shared[((((int)threadIdx.x) + 640))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 640) / 60) * 240)) + ((((int)threadIdx.x) + 40) % 60)) + 120))];
  weight_shared[((((int)threadIdx.x) + 720))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + ((((int)threadIdx.x) / 60) * 240)) + (((int)threadIdx.x) % 60)) + 3000))];
  weight_shared[((((int)threadIdx.x) + 800))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 800) / 60) * 240)) + ((((int)threadIdx.x) + 20) % 60)) + 120))];
  weight_shared[((((int)threadIdx.x) + 880))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 880) / 60) * 240)) + ((((int)threadIdx.x) + 40) % 60)) + 120))];
  weight_shared[((((int)threadIdx.x) + 960))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + ((((int)threadIdx.x) / 60) * 240)) + (((int)threadIdx.x) % 60)) + 3960))];
  weight_shared[((((int)threadIdx.x) + 1040))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 1040) / 60) * 240)) + ((((int)threadIdx.x) + 20) % 60)) + 120))];
  weight_shared[((((int)threadIdx.x) + 1120))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 1120) / 60) * 240)) + ((((int)threadIdx.x) + 40) % 60)) + 120))];
  __syncthreads();
  output_local[(0)] = (output_local[(0)] + (input_shared[(((((int)threadIdx.x) / 20) * 60))] * weight_shared[(((((int)threadIdx.x) % 20) * 60))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 240))] * weight_shared[(((((int)threadIdx.x) % 20) * 60))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 1))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 1))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 241))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 1))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 2))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 2))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 242))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 2))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 3))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 3))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 243))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 3))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 4))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 4))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 244))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 4))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 5))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 5))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 245))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 5))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 6))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 6))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 246))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 6))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 7))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 7))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 247))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 7))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 8))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 8))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 248))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 8))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 9))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 9))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 249))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 9))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 10))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 10))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 250))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 10))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 11))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 11))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 251))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 11))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 12))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 12))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 252))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 12))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 13))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 13))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 253))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 13))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 14))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 14))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 254))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 14))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 15))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 15))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 255))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 15))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 16))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 16))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 256))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 16))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 17))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 17))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 257))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 17))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 18))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 18))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 258))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 18))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 19))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 19))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 259))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 19))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 20))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 20))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 260))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 20))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 21))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 21))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 261))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 21))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 22))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 22))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 262))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 22))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 23))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 23))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 263))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 23))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 24))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 24))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 264))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 24))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 25))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 25))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 265))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 25))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 26))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 26))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 266))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 26))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 27))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 27))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 267))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 27))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 28))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 28))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 268))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 28))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 29))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 29))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 269))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 29))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 30))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 30))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 270))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 30))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 31))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 31))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 271))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 31))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 32))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 32))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 272))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 32))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 33))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 33))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 273))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 33))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 34))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 34))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 274))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 34))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 35))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 35))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 275))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 35))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 36))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 36))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 276))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 36))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 37))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 37))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 277))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 37))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 38))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 38))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 278))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 38))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 39))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 39))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 279))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 39))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 40))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 40))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 280))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 40))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 41))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 41))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 281))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 41))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 42))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 42))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 282))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 42))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 43))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 43))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 283))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 43))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 44))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 44))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 284))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 44))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 45))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 45))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 285))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 45))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 46))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 46))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 286))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 46))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 47))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 47))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 287))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 47))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 48))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 48))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 288))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 48))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 49))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 49))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 289))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 49))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 50))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 50))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 290))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 50))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 51))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 51))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 291))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 51))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 52))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 52))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 292))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 52))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 53))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 53))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 293))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 53))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 54))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 54))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 294))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 54))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 55))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 55))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 295))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 55))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 56))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 56))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 296))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 56))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 57))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 57))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 297))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 57))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 58))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 58))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 298))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 58))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 59))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 59))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 299))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 59))]));
  __syncthreads();
  ((float3*)(input_shared + ((((int)threadIdx.x) * 3))))[0] = ((float3*)(input + ((((((((int)blockIdx.x) >> 1) * 1920) + ((((int)threadIdx.x) / 20) * 240)) + ((((int)threadIdx.x) % 20) * 3)) + 180))))[0];
  ((float3*)(input_shared + (((((int)threadIdx.x) * 3) + 240))))[0] = ((float3*)(input + ((((((((int)blockIdx.x) >> 1) * 1920) + ((((int)threadIdx.x) / 20) * 240)) + ((((int)threadIdx.x) % 20) * 3)) + 1140))))[0];
  weight_shared[(((int)threadIdx.x))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + ((((int)threadIdx.x) / 60) * 240)) + (((int)threadIdx.x) % 60)) + 180))];
  weight_shared[((((int)threadIdx.x) + 80))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 80) / 60) * 240)) + ((((int)threadIdx.x) + 20) % 60)) + 180))];
  weight_shared[((((int)threadIdx.x) + 160))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 160) / 60) * 240)) + ((((int)threadIdx.x) + 40) % 60)) + 180))];
  weight_shared[((((int)threadIdx.x) + 240))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + ((((int)threadIdx.x) / 60) * 240)) + (((int)threadIdx.x) % 60)) + 1140))];
  weight_shared[((((int)threadIdx.x) + 320))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 320) / 60) * 240)) + ((((int)threadIdx.x) + 20) % 60)) + 180))];
  weight_shared[((((int)threadIdx.x) + 400))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 400) / 60) * 240)) + ((((int)threadIdx.x) + 40) % 60)) + 180))];
  weight_shared[((((int)threadIdx.x) + 480))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + ((((int)threadIdx.x) / 60) * 240)) + (((int)threadIdx.x) % 60)) + 2100))];
  weight_shared[((((int)threadIdx.x) + 560))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 560) / 60) * 240)) + ((((int)threadIdx.x) + 20) % 60)) + 180))];
  weight_shared[((((int)threadIdx.x) + 640))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 640) / 60) * 240)) + ((((int)threadIdx.x) + 40) % 60)) + 180))];
  weight_shared[((((int)threadIdx.x) + 720))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + ((((int)threadIdx.x) / 60) * 240)) + (((int)threadIdx.x) % 60)) + 3060))];
  weight_shared[((((int)threadIdx.x) + 800))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 800) / 60) * 240)) + ((((int)threadIdx.x) + 20) % 60)) + 180))];
  weight_shared[((((int)threadIdx.x) + 880))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 880) / 60) * 240)) + ((((int)threadIdx.x) + 40) % 60)) + 180))];
  weight_shared[((((int)threadIdx.x) + 960))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + ((((int)threadIdx.x) / 60) * 240)) + (((int)threadIdx.x) % 60)) + 4020))];
  weight_shared[((((int)threadIdx.x) + 1040))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 1040) / 60) * 240)) + ((((int)threadIdx.x) + 20) % 60)) + 180))];
  weight_shared[((((int)threadIdx.x) + 1120))] = weight[((((((((int)blockIdx.x) & 1) * 4800) + (((((int)threadIdx.x) + 1120) / 60) * 240)) + ((((int)threadIdx.x) + 40) % 60)) + 180))];
  __syncthreads();
  output_local[(0)] = (output_local[(0)] + (input_shared[(((((int)threadIdx.x) / 20) * 60))] * weight_shared[(((((int)threadIdx.x) % 20) * 60))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 240))] * weight_shared[(((((int)threadIdx.x) % 20) * 60))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 1))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 1))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 241))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 1))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 2))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 2))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 242))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 2))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 3))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 3))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 243))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 3))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 4))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 4))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 244))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 4))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 5))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 5))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 245))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 5))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 6))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 6))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 246))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 6))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 7))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 7))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 247))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 7))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 8))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 8))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 248))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 8))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 9))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 9))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 249))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 9))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 10))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 10))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 250))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 10))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 11))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 11))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 251))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 11))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 12))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 12))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 252))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 12))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 13))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 13))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 253))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 13))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 14))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 14))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 254))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 14))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 15))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 15))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 255))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 15))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 16))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 16))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 256))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 16))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 17))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 17))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 257))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 17))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 18))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 18))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 258))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 18))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 19))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 19))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 259))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 19))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 20))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 20))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 260))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 20))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 21))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 21))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 261))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 21))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 22))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 22))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 262))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 22))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 23))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 23))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 263))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 23))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 24))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 24))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 264))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 24))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 25))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 25))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 265))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 25))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 26))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 26))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 266))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 26))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 27))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 27))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 267))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 27))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 28))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 28))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 268))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 28))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 29))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 29))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 269))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 29))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 30))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 30))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 270))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 30))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 31))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 31))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 271))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 31))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 32))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 32))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 272))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 32))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 33))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 33))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 273))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 33))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 34))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 34))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 274))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 34))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 35))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 35))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 275))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 35))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 36))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 36))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 276))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 36))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 37))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 37))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 277))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 37))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 38))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 38))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 278))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 38))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 39))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 39))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 279))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 39))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 40))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 40))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 280))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 40))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 41))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 41))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 281))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 41))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 42))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 42))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 282))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 42))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 43))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 43))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 283))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 43))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 44))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 44))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 284))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 44))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 45))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 45))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 285))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 45))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 46))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 46))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 286))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 46))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 47))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 47))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 287))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 47))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 48))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 48))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 288))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 48))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 49))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 49))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 289))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 49))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 50))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 50))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 290))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 50))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 51))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 51))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 291))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 51))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 52))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 52))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 292))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 52))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 53))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 53))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 293))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 53))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 54))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 54))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 294))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 54))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 55))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 55))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 295))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 55))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 56))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 56))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 296))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 56))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 57))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 57))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 297))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 57))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 58))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 58))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 298))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 58))]));
  output_local[(0)] = (output_local[(0)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 59))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 59))]));
  output_local[(1)] = (output_local[(1)] + (input_shared[((((((int)threadIdx.x) / 20) * 60) + 299))] * weight_shared[((((((int)threadIdx.x) % 20) * 60) + 59))]));
  output[((((((((int)blockIdx.x) >> 1) * 320) + ((((int)threadIdx.x) / 20) * 40)) + ((((int)blockIdx.x) & 1) * 20)) + (((int)threadIdx.x) % 20)))] = output_local[(0)];
  output[(((((((((int)blockIdx.x) >> 1) * 320) + ((((int)threadIdx.x) / 20) * 40)) + ((((int)blockIdx.x) & 1) * 20)) + (((int)threadIdx.x) % 20)) + 160))] = output_local[(1)];
};

